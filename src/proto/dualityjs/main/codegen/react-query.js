"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTendermintClient = exports.useRpcEndpoint = exports.useRpcClient = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _extern = require("./extern");
var _reactQuery = require("@tanstack/react-query");
var _tendermintRpc = require("@cosmjs/tendermint-rpc");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * This file and any referenced files were automatically generated by @cosmology/telescope@0.109.4
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * and run the transpile command or yarn proto command to regenerate this bundle.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         */
var useRpcEndpoint = function useRpcEndpoint(_ref) {
  var getter = _ref.getter,
    options = _ref.options;
  return (0, _reactQuery.useQuery)(['rpcEndpoint', getter], /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return getter();
        case 2:
          return _context.abrupt("return", _context.sent);
        case 3:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })), options);
};
exports.useRpcEndpoint = useRpcEndpoint;
var useRpcClient = function useRpcClient(_ref3) {
  var rpcEndpoint = _ref3.rpcEndpoint,
    options = _ref3.options;
  return (0, _reactQuery.useQuery)(['rpcClient', rpcEndpoint], /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _extern.getRpcClient)(rpcEndpoint);
        case 2:
          return _context2.abrupt("return", _context2.sent);
        case 3:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  })), options);
};
exports.useRpcClient = useRpcClient;
/**
 * Hook that uses react-query to cache a connected tendermint client.
 */
var useTendermintClient = function useTendermintClient(_ref5) {
  var rpcEndpoint = _ref5.rpcEndpoint,
    options = _ref5.options;
  var _useQuery = (0, _reactQuery.useQuery)(['client', 'tendermint', rpcEndpoint], function () {
      return _tendermintRpc.Tendermint34Client.connect(rpcEndpoint);
    }, _objectSpread({
      // allow overriding
      onError: function onError(e) {
        throw new Error("Failed to connect to ".concat(rpcEndpoint) + '\n' + e);
      }
    }, options)),
    client = _useQuery.data;
  return {
    client: client
  };
};
exports.useTendermintClient = useTendermintClient;